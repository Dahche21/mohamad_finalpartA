[
    {
        "id": "7b9ed63e.2138f8",
        "type": "tab",
        "label": "Basic_Flow",
        "disabled": false,
        "info": "# Basic flow to start with STM32CubeMonitor."
    },
    {
        "id": "db84ccf85d8a1867",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fc9e88320dd79696",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8381c865.236028",
        "type": "subflow",
        "name": "Single value",
        "info": "The 'single value' subflow allows to extract data from processing node.\r\n\r\n * Filter Data to extract only one variable after the \"processing node\" step .\r\n * Modify the message to fit with standard widgets such as gauges.\r\n * Limit the number of messages to a maximum of 10 msg per second.\r\n\r\n### **Input**\r\n\r\nThe subflow 'single value' takes in input the `msg.payload`\r\nfrom the processing output. All the messages sent by the processing node have the same structure.\r\n\r\n    \"payload\": {\r\n        \"groupname\": \"Snapshot2\",\r\n        \"variabledata\": [\r\n            {\r\n                \"y\": \"9\",\r\n                \"x\": \"1567509421459\"\r\n            },\r\n            {\r\n                \"y\": \"9\",\r\n                \"x\": \"1567509421459\"\r\n            },\r\n            {\r\n                \"y\": \"9\",\r\n                \"x\": \"1567509421459\"\r\n            }\r\n        ],\r\n        \"variablename\": \"int2\"\r\n      }\r\n    }\r\n\r\n### **Filter on selected variable**\r\nSeveral messages are sent by the processing node for each variable, so the first step of this 'single value' subflow is to filter and keep only messages related to the selected variable.\r\nThe 'filter variable' node will only keep messages with the right `variablename` key.\r\n\r\n### **Extract duplets table**\r\n\r\nThe received message is an Object containing {groupname, variabledata[array], variablename}.  \r\nThe array contains two variables :\r\n - `y` the value \r\n - `x` the time\r\n\r\nA single message contains multiple pairs of values extract at a regular time interval.\r\nThe time interval depends on the acquisition frequency.\r\nWith the 'change' node and the `set` property, the `msg.payload` is set to \r\n`msg.payload.variabledata`, only the data variable array is set into msg.payload.\r\n\r\n    \"payload\": {\r\n        \"variabledata\": [\r\n            {\r\n                \"y\": \"9\",\r\n                \"x\": \"1567509421459\"\r\n            },\r\n            {\r\n                \"y\": \"9\",\r\n                \"x\": \"1567509421459\"\r\n            },\r\n            {\r\n                \"y\": \"9\",\r\n                \"x\": \"1567509421459\"\r\n            }\r\n        ]\r\n    }\r\n\r\n### **Split duplets table**\r\n\r\nThe data variable array is split with a length of one in smaller objects by the 'split' node.\r\nEach new object contains two subvariables : `y` and `x`.\r\n\r\n    \"payload\": {\r\n        \"y\": \"9\",\r\n        \"x\": \"1567509421459\"\r\n    }\r\n\r\n\r\n### **Limit the number of messages**\r\n\r\nThe 'delay' node allows to limit the maximum number of message per second.\r\nIn the 'single value' subflow, one message is extracted per second.\r\n\r\n>_Be careful, a dashboard saturation risk exists if too many messages are received per second._\r\n\r\n### **Extract only y values**\r\n\r\nThe `msg.payload` is set to `msg.payload.y` with the `set` property. \r\nOnly `y` variable is set into msg.payload as single value.\r\n\r\n    \"payload\": { \r\n        \"y\": \"9\" \r\n    }\r\n\r\n### **Output** \r\n\r\nSome widgets such as the gauge and the text node are using the `msg.payload` property.  \r\nThe output node is linked to a gauge that allows to see the evolution \r\nof the `y` variable as a function of time.\r\n\r\n\r\n![subflow_gauge](images/subflow_gauge.png)\r\n\r\n### **Details**\r\n\r\nNote : The debug node allows to see clearly and easily the \r\nmessage at the node output.  \r\n\r\n\r\n> More details on : [Node-Red](https://nodered.org/docs/user-guide/editor/workspace/subflows)\r\n\r\n\r\n-------\r\n\r\n",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": [
                    {
                        "id": "3c5ffe0d.9063b2"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 780,
                "y": 140,
                "wires": [
                    {
                        "id": "66397fd3.d8111",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "varfilter",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-filter",
                    "label": {
                        "en-US": "Variable"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "color": "#3CB4E6"
    },
    {
        "id": "f9c34dde.1e2f4",
        "type": "ui_group",
        "name": "Chart",
        "tab": "17d09b07.741a55",
        "order": 1,
        "disp": true,
        "width": 15,
        "collapse": false
    },
    {
        "id": "17d09b07.741a55",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "22293a40.207896",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "098868c9b36930c9",
        "type": "exe-config",
        "name": "myvariables",
        "exefile": "C:\\Users\\DELL\\STM32CUBEIDE\\workspace3\\project\\Debug\\project.elf",
        "exefolder": "C:\\Users\\DELL\\STM32CUBEIDE/workspace3/project/Debug",
        "exevariablelist": [
            {
                "address": "0x20000040",
                "name": "adcread1",
                "type": 6,
                "checked": true
            },
            {
                "address": "0x20000044",
                "name": "adcread2",
                "type": 6,
                "checked": true
            },
            {
                "address": "0x08003954",
                "name": "AHBPrescTable[0]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x0800395e",
                "name": "AHBPrescTable[10]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x0800395f",
                "name": "AHBPrescTable[11]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x08003960",
                "name": "AHBPrescTable[12]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x08003961",
                "name": "AHBPrescTable[13]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x08003962",
                "name": "AHBPrescTable[14]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x08003963",
                "name": "AHBPrescTable[15]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x08003955",
                "name": "AHBPrescTable[1]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x08003956",
                "name": "AHBPrescTable[2]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x08003957",
                "name": "AHBPrescTable[3]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x08003958",
                "name": "AHBPrescTable[4]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x08003959",
                "name": "AHBPrescTable[5]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x0800395a",
                "name": "AHBPrescTable[6]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x0800395b",
                "name": "AHBPrescTable[7]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x0800395c",
                "name": "AHBPrescTable[8]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x0800395d",
                "name": "AHBPrescTable[9]",
                "type": 1,
                "checked": false
            },
            {
                "address": "0x20000030",
                "name": "av_adcread1",
                "type": 10,
                "checked": true
            },
            {
                "address": "0x20000038",
                "name": "av_adcread2",
                "type": 10,
                "checked": true
            },
            {
                "address": "0x20000090",
                "name": "hadc1.DMA_Handle",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x2000009c",
                "name": "hadc1.ErrorCode",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x2000005c",
                "name": "hadc1.Init.ClockPrescaler",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000070",
                "name": "hadc1.Init.ContinuousConvMode",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000064",
                "name": "hadc1.Init.DataAlign",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000078",
                "name": "hadc1.Init.DiscontinuousConvMode",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000088",
                "name": "hadc1.Init.DMAContinuousRequests",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x2000006c",
                "name": "hadc1.Init.EOCSelection",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000080",
                "name": "hadc1.Init.ExternalTrigConv",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000084",
                "name": "hadc1.Init.ExternalTrigConvEdge",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000074",
                "name": "hadc1.Init.NbrOfConversion",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x2000007c",
                "name": "hadc1.Init.NbrOfDiscConversion",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000060",
                "name": "hadc1.Init.Resolution",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000068",
                "name": "hadc1.Init.ScanConvMode",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000058",
                "name": "hadc1.Instance",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000094",
                "name": "hadc1.Lock",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x2000008c",
                "name": "hadc1.NbrOfCurrentConversionRank",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000098",
                "name": "hadc1.State",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000d8",
                "name": "hadc2.DMA_Handle",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000e4",
                "name": "hadc2.ErrorCode",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000a4",
                "name": "hadc2.Init.ClockPrescaler",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000b8",
                "name": "hadc2.Init.ContinuousConvMode",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x200000ac",
                "name": "hadc2.Init.DataAlign",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000c0",
                "name": "hadc2.Init.DiscontinuousConvMode",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x200000d0",
                "name": "hadc2.Init.DMAContinuousRequests",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x200000b4",
                "name": "hadc2.Init.EOCSelection",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000c8",
                "name": "hadc2.Init.ExternalTrigConv",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000cc",
                "name": "hadc2.Init.ExternalTrigConvEdge",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000bc",
                "name": "hadc2.Init.NbrOfConversion",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000c4",
                "name": "hadc2.Init.NbrOfDiscConversion",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000a8",
                "name": "hadc2.Init.Resolution",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000b0",
                "name": "hadc2.Init.ScanConvMode",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000a0",
                "name": "hadc2.Instance",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000dc",
                "name": "hadc2.Lock",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x200000d4",
                "name": "hadc2.NbrOfCurrentConversionRank",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000e0",
                "name": "hadc2.State",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000104",
                "name": "htim3.Channel",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x2000012a",
                "name": "htim3.ChannelNState[0]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x2000012b",
                "name": "htim3.ChannelNState[1]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x2000012c",
                "name": "htim3.ChannelNState[2]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x2000012d",
                "name": "htim3.ChannelNState[3]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000126",
                "name": "htim3.ChannelState[0]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000127",
                "name": "htim3.ChannelState[1]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000128",
                "name": "htim3.ChannelState[2]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000129",
                "name": "htim3.ChannelState[3]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x2000012e",
                "name": "htim3.DMABurstState",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000108",
                "name": "htim3.hdma[0]",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x2000010c",
                "name": "htim3.hdma[1]",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000110",
                "name": "htim3.hdma[2]",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000114",
                "name": "htim3.hdma[3]",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000118",
                "name": "htim3.hdma[4]",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x2000011c",
                "name": "htim3.hdma[5]",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000120",
                "name": "htim3.hdma[6]",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000100",
                "name": "htim3.Init.AutoReloadPreload",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000f8",
                "name": "htim3.Init.ClockDivision",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000f0",
                "name": "htim3.Init.CounterMode",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000f4",
                "name": "htim3.Init.Period",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000ec",
                "name": "htim3.Init.Prescaler",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000fc",
                "name": "htim3.Init.RepetitionCounter",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x200000e8",
                "name": "htim3.Instance",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000124",
                "name": "htim3.Lock",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000125",
                "name": "htim3.State",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x2000014c",
                "name": "htim5.Channel",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000172",
                "name": "htim5.ChannelNState[0]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000173",
                "name": "htim5.ChannelNState[1]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000174",
                "name": "htim5.ChannelNState[2]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000175",
                "name": "htim5.ChannelNState[3]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x2000016e",
                "name": "htim5.ChannelState[0]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x2000016f",
                "name": "htim5.ChannelState[1]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000170",
                "name": "htim5.ChannelState[2]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000171",
                "name": "htim5.ChannelState[3]",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000176",
                "name": "htim5.DMABurstState",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000150",
                "name": "htim5.hdma[0]",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000154",
                "name": "htim5.hdma[1]",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000158",
                "name": "htim5.hdma[2]",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x2000015c",
                "name": "htim5.hdma[3]",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000160",
                "name": "htim5.hdma[4]",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000164",
                "name": "htim5.hdma[5]",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000168",
                "name": "htim5.hdma[6]",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000148",
                "name": "htim5.Init.AutoReloadPreload",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000140",
                "name": "htim5.Init.ClockDivision",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000138",
                "name": "htim5.Init.CounterMode",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x2000013c",
                "name": "htim5.Init.Period",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000134",
                "name": "htim5.Init.Prescaler",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000144",
                "name": "htim5.Init.RepetitionCounter",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000130",
                "name": "htim5.Instance",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x2000016c",
                "name": "htim5.Lock",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x2000016d",
                "name": "htim5.State",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000048",
                "name": "pwm1",
                "type": 10,
                "checked": true
            },
            {
                "address": "0x20000050",
                "name": "pwm2",
                "type": 10,
                "checked": true
            },
            {
                "address": "0x20000000",
                "name": "SystemCoreClock",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000178",
                "name": "uwTick",
                "type": 5,
                "checked": false
            },
            {
                "address": "0x20000008",
                "name": "uwTickFreq",
                "type": 2,
                "checked": false
            },
            {
                "address": "0x20000004",
                "name": "uwTickPrio",
                "type": 5,
                "checked": false
            }
        ],
        "expand": true,
        "filename": "project.elf",
        "exeModifiedTime": 1685702232101,
        "configLastUpdate": 1685702380037
    },
    {
        "id": "c51f6b4b380b7f0f",
        "type": "probe",
        "probeid": "066DFF495751826687113410",
        "probename": "ST-Link v2-1B 066DFF495751826687113410",
        "protocol": "SWD",
        "frequency": "1.8 MHz - Default",
        "probeproperty": "{\"SWD\":[\"4.6 MHz\",\"1.8 MHz - Default\",\"950 kHz\",\"400 kHz\",\"150 kHz\"],\"JTAG\":[\"18 MHz\",\"9 MHz\",\"4.5 MHz\",\"2.25 MHz\",\"1.12 MHz - Default\",\"560 kHz\",\"280 kHz\",\"140 kHz\"]}",
        "probeversion": "ST Link firmware version V2.J41",
        "connectionType": "p2p",
        "nickname": ""
    },
    {
        "id": "3c5ffe0d.9063b2",
        "type": "switch",
        "z": "8381c865.236028",
        "name": "filter variable",
        "property": "payload.variablename",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "varfilter",
                "vt": "env"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 170,
        "y": 60,
        "wires": [
            [
                "4e5ba7a5.14dec8"
            ]
        ]
    },
    {
        "id": "4e5ba7a5.14dec8",
        "type": "change",
        "z": "8381c865.236028",
        "name": "keep only table of duplets",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.variabledata",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 60,
        "wires": [
            [
                "42bc6ed.5b20d9"
            ]
        ]
    },
    {
        "id": "42bc6ed.5b20d9",
        "type": "split",
        "z": "8381c865.236028",
        "name": "Split a table[1..n] of duplets in n msg of single duplet",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 800,
        "y": 60,
        "wires": [
            [
                "8b8ddb84.6fb208"
            ]
        ]
    },
    {
        "id": "8b8ddb84.6fb208",
        "type": "delay",
        "z": "8381c865.236028",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 200,
        "y": 140,
        "wires": [
            [
                "66397fd3.d8111"
            ]
        ]
    },
    {
        "id": "66397fd3.d8111",
        "type": "change",
        "z": "8381c865.236028",
        "name": "keep only value and delete timestamp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.y",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "1ebbb430.dac7dc",
        "type": "ui_chartst",
        "z": "7b9ed63e.2138f8",
        "group": "f9c34dde.1e2f4",
        "name": "myChart",
        "order": 4,
        "width": 15,
        "height": 9,
        "chartType": "line",
        "curveType": "linear",
        "duration": "10",
        "ymin": "",
        "ymax": "",
        "x": 580,
        "y": 280,
        "wires": []
    },
    {
        "id": "6013fb0b.5b7504",
        "type": "acquisition out",
        "z": "7b9ed63e.2138f8",
        "name": "myProbe_Out",
        "probeconfig": "c51f6b4b380b7f0f",
        "x": 540,
        "y": 100,
        "wires": []
    },
    {
        "id": "4a573fb0.4bc99",
        "type": "acquisition in",
        "z": "7b9ed63e.2138f8",
        "name": "myProbe_In",
        "probeconfig": "c51f6b4b380b7f0f",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "a7c3e070.5a6c"
            ],
            []
        ]
    },
    {
        "id": "d59587ff.cd1748",
        "type": "variables",
        "z": "7b9ed63e.2138f8",
        "groupname": "myVariables",
        "accesspoint": 0,
        "execonfig": "098868c9b36930c9",
        "variablelist": [],
        "triggerstartmode": "manual",
        "triggername": "pwm1",
        "triggerthreshold": "30000",
        "frequency": "1000",
        "frequencyType": "custom",
        "snapshotheader": "",
        "mode": "direct",
        "lastImportedTime": 1685706919416,
        "openStatus": true,
        "x": 330,
        "y": 120,
        "wires": [
            [
                "6013fb0b.5b7504"
            ],
            [
                "f14d0398.f1861"
            ]
        ]
    },
    {
        "id": "fc00295e.79ada8",
        "type": "ui_button",
        "z": "7b9ed63e.2138f8",
        "name": "",
        "group": "f9c34dde.1e2f4",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Clear Graphs",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "clear",
        "x": 430,
        "y": 380,
        "wires": [
            [
                "1ebbb430.dac7dc"
            ]
        ]
    },
    {
        "id": "5fd51c96.2330e4",
        "type": "ui_button",
        "z": "7b9ed63e.2138f8",
        "name": "",
        "group": "f9c34dde.1e2f4",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "START Acquisition",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "start",
        "topicType": "str",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "d59587ff.cd1748"
            ]
        ]
    },
    {
        "id": "52eadfe3.2c8cc",
        "type": "ui_button",
        "z": "7b9ed63e.2138f8",
        "name": "",
        "group": "f9c34dde.1e2f4",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "label": "STOP Acquisition",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "stop",
        "topicType": "str",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "d59587ff.cd1748"
            ]
        ]
    },
    {
        "id": "a7c3e070.5a6c",
        "type": "processing",
        "z": "7b9ed63e.2138f8",
        "groupname": "myVariables",
        "groupid": "d59587ff.cd1748",
        "expressions": [],
        "statistics": [],
        "logmode": "no",
        "logformat": "stcm",
        "x": 390,
        "y": 280,
        "wires": [
            [
                "1ebbb430.dac7dc"
            ],
            []
        ]
    },
    {
        "id": "f14d0398.f1861",
        "type": "ui_toast",
        "z": "7b9ed63e.2138f8",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 530,
        "y": 160,
        "wires": []
    }
]